.TH "es.courserajava.edu.duke.Pixel" 3 "Thu Dec 29 2022" "Version 1.0" "ProyectoFinalLDH" \" -*- nroff -*-
.ad l
.nh
.SH NAME
es.courserajava.edu.duke.Pixel
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPixel\fP (\fBPixel\fP other)"
.br
.ti -1c
.RI "int \fBgetX\fP ()"
.br
.ti -1c
.RI "int \fBgetY\fP ()"
.br
.ti -1c
.RI "int \fBgetRed\fP ()"
.br
.ti -1c
.RI "int \fBgetGreen\fP ()"
.br
.ti -1c
.RI "int \fBgetBlue\fP ()"
.br
.ti -1c
.RI "int \fBgetAlpha\fP ()"
.br
.ti -1c
.RI "void \fBsetRed\fP (int r)"
.br
.ti -1c
.RI "void \fBsetGreen\fP (int g)"
.br
.ti -1c
.RI "void \fBsetBlue\fP (int b)"
.br
.ti -1c
.RI "void \fBsetAlpha\fP (int a)"
.br
.ti -1c
.RI "String \fBtoString\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
The \fC\fBPixel\fP\fP class represents a color as its component values of red, green, blue, as well as alpha (for transparency)\&.
.PP
Each of the component values of a pixel must have a value between 0 and 255\&. If a value is given outside that range, it is changed to be within that range\&. As such, a negative value would be set to 0 and a value greater than 255 would be set to 255\&.
.PP
Example usage:
.PP
.PP
.nf

\fBImageResource\fP image = new ImageResource();
for (\fBPixel\fP p : image\&.pixels()) {
    int red = p\&.getRed();
    int green = p\&.getGreen();
    int blue = p\&.getBlue();
    int average = (red + green + blue) / 3;
    p\&.setRed(average);
    p\&.setGreen(average);
    p\&.setBlue(average);
}
image\&.draw();
.fi
.PP
.PP
This is open-source software released under the terms of the GPL (http://www.gnu.org/licenses/gpl.html)\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "es\&.courserajava\&.edu\&.duke\&.Pixel\&.Pixel (\fBPixel\fP other)"
Creates a new \fBPixel\fP from with the same values as the other pixel passed as a parameter\&.
.PP
\fBParameters\fP
.RS 4
\fIother\fP another pixel 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "int es\&.courserajava\&.edu\&.duke\&.Pixel\&.getAlpha ()"
Returns the value of the pixel's alpha (or transparency) component\&.
.PP
\fBReturns\fP
.RS 4
the pixel's alpha value within the range 0-255 
.RE
.PP

.SS "int es\&.courserajava\&.edu\&.duke\&.Pixel\&.getBlue ()"
Returns the value of the pixel's blue component\&.
.PP
\fBReturns\fP
.RS 4
the pixel's blue value within the range 0-255 
.RE
.PP

.SS "int es\&.courserajava\&.edu\&.duke\&.Pixel\&.getGreen ()"
Returns the value of the pixel's green component\&.
.PP
\fBReturns\fP
.RS 4
the pixel's green value within the range 0-255 
.RE
.PP

.SS "int es\&.courserajava\&.edu\&.duke\&.Pixel\&.getRed ()"
Returns the value of the pixel's red component\&.
.PP
\fBReturns\fP
.RS 4
the pixel's red value within the range 0-255 
.RE
.PP

.SS "int es\&.courserajava\&.edu\&.duke\&.Pixel\&.getX ()"
Returns the pixel's x-coordinate within the image\&.
.PP
\fBReturns\fP
.RS 4
the x-coordinate of this pixel\&. 
.RE
.PP

.SS "int es\&.courserajava\&.edu\&.duke\&.Pixel\&.getY ()"
Returns the pixel's y-coordinate within the image\&.
.PP
\fBReturns\fP
.RS 4
the y-coordinate of this pixel\&. 
.RE
.PP

.SS "void es\&.courserajava\&.edu\&.duke\&.Pixel\&.setAlpha (int a)"
Resets the value of the pixel's alpha (or transparency) component to the value passed as a parameter\&. If it is not in the range of 0-255 it is changed to be in that range\&.
.PP
\fBParameters\fP
.RS 4
\fIa\fP the alpha value 
.RE
.PP

.SS "void es\&.courserajava\&.edu\&.duke\&.Pixel\&.setBlue (int b)"
Resets the value of the pixel's blue component to the value passed as a parameter\&. If it is not in the range of 0-255 it is changed to be in that range\&.
.PP
\fBParameters\fP
.RS 4
\fIb\fP the blue value 
.RE
.PP

.SS "void es\&.courserajava\&.edu\&.duke\&.Pixel\&.setGreen (int g)"
Resets the value of the pixel's green component to the value passed as a parameter\&. If it is not in the range of 0-255 it is changed to be in that range\&.
.PP
\fBParameters\fP
.RS 4
\fIg\fP the green value 
.RE
.PP

.SS "void es\&.courserajava\&.edu\&.duke\&.Pixel\&.setRed (int r)"
Resets the value of the pixel's red component to the value passed as a parameter\&. If it is not in the range of 0-255 it is changed to be in that range\&.
.PP
\fBParameters\fP
.RS 4
\fIr\fP the red value 
.RE
.PP

.SS "String es\&.courserajava\&.edu\&.duke\&.Pixel\&.toString ()"
Returns the string representation of the of the pixel\&.
.PP
\fBReturns\fP
.RS 4
a string containing the RGB values 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for ProyectoFinalLDH from the source code\&.
