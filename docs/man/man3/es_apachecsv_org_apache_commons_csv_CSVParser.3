.TH "es.apachecsv.org.apache.commons.csv.CSVParser" 3 "Thu Dec 29 2022" "Version 1.0" "ProyectoFinalLDH" \" -*- nroff -*-
.ad l
.nh
.SH NAME
es.apachecsv.org.apache.commons.csv.CSVParser
.SH SYNOPSIS
.br
.PP
.PP
Inherits Iterable< CSVRecord >, and Closeable\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCSVParser\fP (final Reader reader, final \fBCSVFormat\fP format)  throws IOException "
.br
.ti -1c
.RI "\fBCSVParser\fP (final Reader reader, final \fBCSVFormat\fP format, final long characterOffset, final long recordNumber)  throws IOException "
.br
.ti -1c
.RI "void \fBclose\fP ()  throws IOException "
.br
.ti -1c
.RI "long \fBgetCurrentLineNumber\fP ()"
.br
.ti -1c
.RI "Map< String, Integer > \fBgetHeaderMap\fP ()"
.br
.ti -1c
.RI "long \fBgetRecordNumber\fP ()"
.br
.ti -1c
.RI "List< \fBCSVRecord\fP > \fBgetRecords\fP ()  throws IOException "
.br
.ti -1c
.RI "boolean \fBisClosed\fP ()"
.br
.ti -1c
.RI "Iterator< \fBCSVRecord\fP > \fBiterator\fP ()"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBCSVParser\fP \fBparse\fP (final File file, final Charset charset, final \fBCSVFormat\fP format)  throws IOException "
.br
.ti -1c
.RI "static \fBCSVParser\fP \fBparse\fP (final String string, final \fBCSVFormat\fP format)  throws IOException "
.br
.ti -1c
.RI "static \fBCSVParser\fP \fBparse\fP (final URL url, final Charset charset, final \fBCSVFormat\fP format)  throws IOException "
.br
.in -1c
.SH "Detailed Description"
.PP 
Parses CSV files according to the specified format\&.
.PP
Because CSV appears in many different dialects, the parser supports many formats by allowing the specification of a \fC\fBCSVFormat\fP\fP\&.
.PP
The parser works record wise\&. It is not possible to go back, once a record has been parsed from the input stream\&.
.PP
.SS "Creating instances"
.PP
There are several static factory methods that can be used to create instances for various types of resources: 
.PP
.PD 0
.IP "\(bu" 2
\fC\fBparse(java\&.io\&.File, Charset, CSVFormat)\fP\fP 
.IP "\(bu" 2
\fC\fBparse(String, CSVFormat)\fP\fP 
.IP "\(bu" 2
\fC\fBparse(java\&.net\&.URL, java\&.nio\&.charset\&.Charset, CSVFormat)\fP\fP 
.PP
.PP
Alternatively parsers can also be created by passing a \fC\fBReader\fP\fP directly to the sole constructor\&.
.PP
For those who like fluent APIs, parsers can be created using \fC\fBCSVFormat#parse(java\&.io\&.Reader)\fP\fP as a shortcut: 
.PP
.PP
.nf

for(\fBCSVRecord\fP record : CSVFormat\&.EXCEL\&.parse(in)) {
    \&.\&.\&.
}
.fi
.PP
.PP
.SS "Parsing record wise"
.PP
To parse a CSV input from a file, you write: 
.PP
.PP
.nf

File csvData = new File("/path/to/csv");
\fBCSVParser\fP parser = \fBCSVParser\&.parse\fP(csvData, \fBCSVFormat\&.RFC4180\fP);
for (\fBCSVRecord\fP csvRecord : parser) {
    \&.\&.\&.
}
.fi
.PP
.PP
This will read the parse the contents of the file using the \fCRFC 4180\fP format\&. 
.PP
To parse CSV input in a format like Excel, you write: 
.PP
.PP
.nf

\fBCSVParser\fP parser = \fBCSVParser\&.parse\fP(csvData, \fBCSVFormat\&.EXCEL\fP);
for (\fBCSVRecord\fP csvRecord : parser) {
    \&.\&.\&.
}
.fi
.PP
.PP
If the predefined formats don't match the format at hands, custom formats can be defined\&. More information about customising CSVFormats is available in \fC\fBCSVFormat JavaDoc\fP\fP\&. 
.PP
.SS "Parsing into memory"
.PP
If parsing record wise is not desired, the contents of the input can be read completely into memory\&. 
.PP
.PP
.nf

Reader in = new StringReader("a;b\\nc;d");
\fBCSVParser\fP parser = new \fBCSVParser\fP(in, \fBCSVFormat\&.EXCEL\fP);
List<\fBCSVRecord\fP> list = parser\&.getRecords();
.fi
.PP
.PP
There are two constraints that have to be kept in mind: 
.PP
.PD 0
.IP "1." 4
Parsing into memory starts at the current position of the parser\&. If you have already parsed records from the input, those records will not end up in the in memory representation of your CSV data\&. 
.IP "2." 4
Parsing into memory may consume a lot of system resources depending on the input\&. For example if you're parsing a 150MB file of CSV data the contents will be read completely into memory\&. 
.PP
.PP
.SS "Notes"
.PP
Internal parser state is completely covered by the format and the reader-state\&. 
.PP
\fBVersion\fP
.RS 4
.RE
.PP
\fBId\fP
.RS 4
\fBCSVParser\&.java\fP 1743529 2016-05-12 17:02:05Z ggregory 
.RE
.PP
.PP
\fBSee also\fP
.RS 4
\fCpackage documentation for more details\fP 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "es\&.apachecsv\&.org\&.apache\&.commons\&.csv\&.CSVParser\&.CSVParser (final Reader reader, final \fBCSVFormat\fP format) throws IOException"
Customized CSV parser using the given \fC\fBCSVFormat\fP\fP
.PP
If you do not read all records from the given \fC
reader\fP
, you should call \fC\fBclose()\fP\fP on the parser, unless you close the \fC
reader\fP
\&. 
.PP
\fBParameters\fP
.RS 4
\fIreader\fP a Reader containing CSV-formatted input\&. Must not be null\&. 
.br
\fIformat\fP the \fBCSVFormat\fP used for CSV parsing\&. Must not be null\&. 
.RE
.PP
\fBExceptions\fP
.RS 4
\fIIllegalArgumentException\fP If the parameters of the format are inconsistent or if either reader or format are null\&. 
.br
\fIIOException\fP If there is a problem reading the header or skipping the first record 
.RE
.PP

.SS "es\&.apachecsv\&.org\&.apache\&.commons\&.csv\&.CSVParser\&.CSVParser (final Reader reader, final \fBCSVFormat\fP format, final long characterOffset, final long recordNumber) throws IOException"
Customized CSV parser using the given \fC\fBCSVFormat\fP\fP
.PP
If you do not read all records from the given \fC
reader\fP
, you should call \fC\fBclose()\fP\fP on the parser, unless you close the \fC
reader\fP
\&. 
.PP
\fBParameters\fP
.RS 4
\fIreader\fP a Reader containing CSV-formatted input\&. Must not be null\&. 
.br
\fIformat\fP the \fBCSVFormat\fP used for CSV parsing\&. Must not be null\&. 
.br
\fIcharacterOffset\fP Lexer offset when the parser does not start parsing at the beginning of the source\&. 
.br
\fIrecordNumber\fP The next record number to assign 
.RE
.PP
\fBExceptions\fP
.RS 4
\fIIllegalArgumentException\fP If the parameters of the format are inconsistent or if either reader or format are null\&. 
.br
\fIIOException\fP If there is a problem reading the header or skipping the first record 
.RE
.PP
\fBSince\fP
.RS 4
1\&.1 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void es\&.apachecsv\&.org\&.apache\&.commons\&.csv\&.CSVParser\&.close () throws IOException"
Closes resources\&.
.PP
\fBExceptions\fP
.RS 4
\fIIOException\fP If an I/O error occurs 
.RE
.PP

.SS "long es\&.apachecsv\&.org\&.apache\&.commons\&.csv\&.CSVParser\&.getCurrentLineNumber ()"
Returns the current line number in the input stream\&.
.PP
\fBATTENTION:\fP If your CSV input has multi-line values, the returned number does not correspond to the record number\&. 
.PP
\fBReturns\fP
.RS 4
current line number 
.RE
.PP

.SS "Map< String, Integer > es\&.apachecsv\&.org\&.apache\&.commons\&.csv\&.CSVParser\&.getHeaderMap ()"
Returns a copy of the header map that iterates in column order\&. 
.PP
The map keys are column names\&. The map values are 0-based indices\&. 
.PP
\fBReturns\fP
.RS 4
a copy of the header map that iterates in column order\&. 
.RE
.PP

.SS "long es\&.apachecsv\&.org\&.apache\&.commons\&.csv\&.CSVParser\&.getRecordNumber ()"
Returns the current record number in the input stream\&.
.PP
\fBATTENTION:\fP If your CSV input has multi-line values, the returned number does not correspond to the line number\&. 
.PP
\fBReturns\fP
.RS 4
current record number 
.RE
.PP

.SS "List< \fBCSVRecord\fP > es\&.apachecsv\&.org\&.apache\&.commons\&.csv\&.CSVParser\&.getRecords () throws IOException"
Parses the CSV input according to the given format and returns the content as a list of \fC\fBCSVRecords\fP\fP\&.
.PP
The returned content starts at the current parse-position in the stream\&. 
.PP
\fBReturns\fP
.RS 4
list of \fC\fBCSVRecords\fP\fP, may be empty 
.RE
.PP
\fBExceptions\fP
.RS 4
\fIIOException\fP on parse error or input read-failure 
.RE
.PP

.SS "boolean es\&.apachecsv\&.org\&.apache\&.commons\&.csv\&.CSVParser\&.isClosed ()"
Gets whether this parser is closed\&.
.PP
\fBReturns\fP
.RS 4
whether this parser is closed\&. 
.RE
.PP

.SS "Iterator< \fBCSVRecord\fP > es\&.apachecsv\&.org\&.apache\&.commons\&.csv\&.CSVParser\&.iterator ()"
Returns an iterator on the records\&.
.PP
IOExceptions occurring during the iteration are wrapped in a RuntimeException\&. If the parser is closed a call to \fC
next()\fP
 will throw a NoSuchElementException\&.
.SS "static \fBCSVParser\fP es\&.apachecsv\&.org\&.apache\&.commons\&.csv\&.CSVParser\&.parse (final File file, final Charset charset, final \fBCSVFormat\fP format) throws IOException\fC [static]\fP"
Creates a parser for the given \fC\fBFile\fP\fP\&.
.PP
\fBNote:\fP This method internally creates a FileReader using \fC\fBjava\&.io\&.FileReader#FileReader(java\&.io\&.File)\fP\fP which in turn relies on the default encoding of the JVM that is executing the code\&. If this is insufficient create a URL to the file and use \fC\fBparse(URL, Charset, CSVFormat)\fP\fP
.PP
\fBParameters\fP
.RS 4
\fIfile\fP a CSV file\&. Must not be null\&. 
.br
\fIcharset\fP A charset 
.br
\fIformat\fP the \fBCSVFormat\fP used for CSV parsing\&. Must not be null\&. 
.RE
.PP
\fBReturns\fP
.RS 4
a new parser 
.RE
.PP
\fBExceptions\fP
.RS 4
\fIIllegalArgumentException\fP If the parameters of the format are inconsistent or if either file or format are null\&. 
.br
\fIIOException\fP If an I/O error occurs 
.RE
.PP

.SS "static \fBCSVParser\fP es\&.apachecsv\&.org\&.apache\&.commons\&.csv\&.CSVParser\&.parse (final String string, final \fBCSVFormat\fP format) throws IOException\fC [static]\fP"
Creates a parser for the given \fC\fBString\fP\fP\&.
.PP
\fBParameters\fP
.RS 4
\fIstring\fP a CSV string\&. Must not be null\&. 
.br
\fIformat\fP the \fBCSVFormat\fP used for CSV parsing\&. Must not be null\&. 
.RE
.PP
\fBReturns\fP
.RS 4
a new parser 
.RE
.PP
\fBExceptions\fP
.RS 4
\fIIllegalArgumentException\fP If the parameters of the format are inconsistent or if either string or format are null\&. 
.br
\fIIOException\fP If an I/O error occurs 
.RE
.PP

.SS "static \fBCSVParser\fP es\&.apachecsv\&.org\&.apache\&.commons\&.csv\&.CSVParser\&.parse (final URL url, final Charset charset, final \fBCSVFormat\fP format) throws IOException\fC [static]\fP"
Creates a parser for the given URL\&.
.PP
If you do not read all records from the given \fC
url\fP
, you should call \fC\fBclose()\fP\fP on the parser, unless you close the \fC
url\fP
\&. 
.PP
\fBParameters\fP
.RS 4
\fIurl\fP a URL\&. Must not be null\&. 
.br
\fIcharset\fP the charset for the resource\&. Must not be null\&. 
.br
\fIformat\fP the \fBCSVFormat\fP used for CSV parsing\&. Must not be null\&. 
.RE
.PP
\fBReturns\fP
.RS 4
a new parser 
.RE
.PP
\fBExceptions\fP
.RS 4
\fIIllegalArgumentException\fP If the parameters of the format are inconsistent or if either url, charset or format are null\&. 
.br
\fIIOException\fP If an I/O error occurs 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for ProyectoFinalLDH from the source code\&.
