.TH "es.courserajava.edu.duke.StorageResource" 3 "Thu Dec 29 2022" "Version 1.0" "ProyectoFinalLDH" \" -*- nroff -*-
.ad l
.nh
.SH NAME
es.courserajava.edu.duke.StorageResource
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBStorageResource\fP ()"
.br
.ti -1c
.RI "\fBStorageResource\fP (\fBStorageResource\fP other)"
.br
.ti -1c
.RI "void \fBclear\fP ()"
.br
.ti -1c
.RI "void \fBadd\fP (String s)"
.br
.ti -1c
.RI "int \fBsize\fP ()"
.br
.ti -1c
.RI "boolean \fBcontains\fP (String s)"
.br
.ti -1c
.RI "Iterable< String > \fBdata\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
The \fC\fBStorageResource\fP\fP class stores any number of \fCString\fP objects and allows access to these stored values one at a time, using the method \fCdata\fP\&. These strings can then be iterated over in the order they were added using a \fCfor\fP loop\&.
.PP
This class mirrors an \fCArrayList<String>\fP in some functionality, but is simpler to use and fits the Duke/Coursersa model of creating and using iterables\&.
.PP
Example usage:
.PP
.PP
.nf

\fBFileResource\fP fr = new FileResource();
\fBStorageResource\fP store = new \fBStorageResource()\fP;
for (String s : fr\&.words()) {
    store\&.add(s);
}
// can process store here, e\&.g\&.,
// get number of strings stored
int x = store\&.size();
for (String s : store\&.data()) {
    // print or process s
}
.fi
.PP
.PP
This software is licensed with an Apache 2 license, see http://www.apache.org/licenses/LICENSE-2.0 for details\&.
.PP
\fBAuthor\fP
.RS 4
Duke Software Team 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "es\&.courserajava\&.edu\&.duke\&.StorageResource\&.StorageResource ()"
Create an empty \fC\fBStorageResource\fP\fP object 
.SS "es\&.courserajava\&.edu\&.duke\&.StorageResource\&.StorageResource (\fBStorageResource\fP other)"
Create an \fC\fBStorageResource\fP\fP object that is a copy of another list\&.
.PP
\fBParameters\fP
.RS 4
\fIother\fP the original list being copied 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void es\&.courserajava\&.edu\&.duke\&.StorageResource\&.add (String s)"
Adds a string to this storage object\&.
.PP
\fBParameters\fP
.RS 4
\fIs\fP the value added 
.RE
.PP

.SS "void es\&.courserajava\&.edu\&.duke\&.StorageResource\&.clear ()"
Remove all strings from this object so that \fC\&.\fBsize()\fP == 0\fP\&. 
.SS "boolean es\&.courserajava\&.edu\&.duke\&.StorageResource\&.contains (String s)"
Determines if a string is stored in this object\&.
.PP
\fBParameters\fP
.RS 4
\fIs\fP string searched for 
.RE
.PP
\fBReturns\fP
.RS 4
true if and only if s is stored in this object 
.RE
.PP

.SS "Iterable< String > es\&.courserajava\&.edu\&.duke\&.StorageResource\&.data ()"
Create and return an iterable for all strings in this object\&.
.PP
\fBReturns\fP
.RS 4
an \fCIterable\fP that allows access to each string in the order stored 
.RE
.PP

.SS "int es\&.courserajava\&.edu\&.duke\&.StorageResource\&.size ()"
Returns the number of strings added/stored in this object\&.
.PP
\fBReturns\fP
.RS 4
the number of strings stored in the object 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for ProyectoFinalLDH from the source code\&.
